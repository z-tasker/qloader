name: Test
on:
  pull_request:
  push: { branches: master }

jobs:
  test:
    environment: ci
    name: Run test suite
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - uses: actions/setup-python@v1
      with:
        python-version: 3.8

    - uses: Gr1N/setup-poetry@v4

    - uses: actions/cache@v2
      with:
        path: ~/.cache/pypoetry/virtualenvs
        key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}
    
    - name: Install dependencies
      run: |
        poetry install

    - name: Run full pytest coverage 
      run: |
        poetry run pytest --cov=qloader

    - name: Build python wheel
      run: |
        poetry build

    - name: Set package version
      run: |
        echo """package_version=$(poetry run python -c "from importlib import metadata; print(metadata.version('qloader'))")""" >> $GITHUB_ENV

    - name: Save build artifacts on action
      uses: actions/upload-artifact@v2
      with:
        name: wheel
        path: ./dist/qloader-${{ env.package_version }}-py3-none-any.whl

    - name: Publish Package to PYPI
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
      env:
        PYPI_API_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        poetry config pypi-token.pypi ${PYPI_API_TOKEN} && poetry publish 

